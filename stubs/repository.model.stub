<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use App\Repositories\Contracts\{{ class }} as {{ class }}Contract;
use SimpleRepository\Concerns\HasEloquentSupport;
use SimpleRepository\Concerns\HasFilter;
use SimpleRepository\Repository;

class {{ class }} extends Repository implements {{ class }}Contract
{
    use HasEloquentSupport;
    use HasFilter;

    protected ?string $modelName = {{ model }}::class;

    /**
     * Get data source for the repository.
     */
    public function getDataSource(): {{ model }}
    {
        return $this->model();
    }

    /**
     * Get a listing of the resource.
     */
    public function all()
    {
        return $this->getDataSource()->all();
    }

    /**
     * Get a listing of the resource with paination.
     */
    public function paginate(array $filters = [])
    {
        return $this->getPagination($filters, ['*'], ['page_name' => 'page'])->onEachSide(1);
    }

    /**
     * Get a specified resource.
     */
    public function find(string|int $id)
    {
        return $this->getDataSource()->find($id);
    }

    /**
     * Create a new resource.
     */
    public function create(array $data)
    {
        return $this->handleSafely(function () use ($data) {
            $model = $this->getDataSource();

            foreach ($data as $key => $value) {
                $model->{$key} = $value;
            }

            $model->save();

            $model->refresh();

            return $model->id;
        }, '{{ class }}::create');
    }

    /**
     * Update a specified resource.
     */
    public function update(array $data, string|int $id)
    {
        return $this->handleSafely(function () use ($data, $id) {
            $model = $this->find($id);

            foreach ($data as $key => $value) {
                $model->{$key} = $value;
            }

            $model->save();

            return true;
        }, '{{ class }}::update');
    }

    /**
     * Delete a specified resource.
     */
    public function delete(string|int $id)
    {
        return $this->handleSafely(function () use ($id) {
            $model = $this->find($id);
            $model->delete();

            return true;
        }, '{{ class }}::delete');
    }
}
